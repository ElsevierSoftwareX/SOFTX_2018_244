stats = 1;

logging = {
	level = 4;
}

nodes = {
	broker1 = {
		type = "mqtt"
		format = "protobuf",
		username = "villas",
        password = "s3c0sim4!",
		host = "acs-os-villas",
		port = 1883,
		in = {
            subscribe = "villas-dpsim1"
        },
        out = {
            publish = "dpsim1-villas"
        },		
		hooks = (
			{ type = "stats" }
		)
	},
	dpsim1 = {
		type = "shmem",
		in = {
            name = "/dpsim1-villas"	# Name of shared memory segment for sending side
        }
        out = {
            name = "/villas-dpsim1"	# Name of shared memory segment for receiving side
        },				
		queuelen = 1024,	# Length of the queues
		polling = true,		# We can busy-wait or use pthread condition variables for synchronizations
		hooks = (
			{ type = "stats" }
		)
	},
	profile = {
		type = "file",
		format = "csv", 
		uri = "/projects/reserve/Load_profile_sum.csv",
		rate = 1,
		in = {
			eof = "rewind"
		}
	},
	oscilloscope = {
		type = "socket",
		layer = "udp"
		format = "protobuf",		
		local = "*:12000"
		remote = "134.130.169.31:12000"
	},
	lo = {
		type = "loopback"	
	},
	web = {
		type = "websocket"
	}
}

paths = (
	{
		in = "dpsim1",
		out = [ "broker1", "lo" ],
		
		hooks = (
			{
				type = "limit_rate",
				rate = 50
			}
		)
	},
	{
		in = [
			"broker1.data[0]",
			"profile.data[0]"
		],
		out = "dpsim1",
		
		hooks = (
			{
				type = "limit_rate",
				rate = 50
			}
		)
	},
	{
		in = [ "lo.data[8]", "lo.data[10]" ],
		out = "oscilloscope",
		hooks = (
			{ type = "scale", scale = 0.0008, offset = -180 },
			{ type = "print" }
		)
	}
)
