logging = {
	level = 3
}

stats = 5

nodes = {
	v2g_bus_68 = {
		type = "mqtt",
		format = "json.reserve",

		builtin = false,

		host = "acs-os-villas",
		publish = "reserve_esb_lv",
		subscribe = "reserve_esb_lv/Q_Set",

		out = {
			signals = (
				{ name = "V", unit = "Volts" }
			)
		},
		in = {
			signals = (
				{ name = "Q", unit = "Var" }
			)
		}
	},
	v2g_bus_81 = {
		type = "mqtt",
		format = "json.reserve",

		builtin = false,

		host = "acs-os-villas",
		publish = "reserve_esb_lv",
		subscribe = "reserve_esb_lv/Q_Set",

		out = {
			signals = (
				{ name = "V", unit = "Volts" }
			)
		},
		in = {
			signals = (
				{ name = "Q", unit = "Var" }
			)
		}
	},
	v2g_bus_27 = {
		type = "mqtt",
		format = "json.reserve",

		builtin = false,

		host = "acs-os-villas",
		publish = "reserve_esb_lv",
		subscribe = "reserve_esb_lv/Q_Set",

		out = {
			signals = (
				{ name = "V", unit = "Volts" }
			)
		},
		in = {
			signals = (
				{ name = "Q", unit = "Var" }
			)
		}
	},
	v2g_bus_35 = {
		type = "mqtt",
		format = "json.reserve",

		builtin = false,

		host = "acs-os-villas",
		publish = "reserve_esb_lv",
		subscribe = "reserve_esb_lv/Q_Set",

		out = {
			signals = (
				{ name = "V", unit = "Volts" }
			)
		},
		in = {
			signals = (
				{ name = "Q", unit = "Var" }
			)
		}
	},
	v2g_bus_85 = {
		type = "mqtt",
		format = "json.reserve",

		builtin = false,

		host = "acs-os-villas",
		publish = "reserve_esb_lv",
		subscribe = "reserve_esb_lv/Q_Set",

		out = {
			signals = (
				{ name = "V", unit = "Volts" }
			)
		},
		in = {
			signals = (
				{ name = "Q", unit = "Var" }
			)
		}
	},
	v2g_bus_19 = {
		type = "mqtt",
		format = "json.reserve",

		builtin = false,

		host = "acs-os-villas",
		publish = "reserve_esb_lv",
		subscribe = "reserve_esb_lv/Q_Set",

		out = {
			signals = (
				{ name = "V", unit = "Volts" }
			)
		},
		in = {
			signals = (
				{ name = "Q", unit = "Var" }
			)
		}
	},
	v2g_bus_63 = {
		type = "mqtt",
		format = "json.reserve",

		builtin = false,

		host = "acs-os-villas",
		publish = "reserve_esb_lv",
		subscribe = "reserve_esb_lv/Q_Set",

		out = {
			signals = (
				{ name = "V", unit = "Volts" }
			)
		},
		in = {
			signals = (
				{ name = "Q", unit = "Var" }
			)
		}
	},
	v2g_bus_76 = {
		type = "mqtt",
		format = "json.reserve",

		builtin = false,

		host = "acs-os-villas",
		publish = "reserve_esb_lv",
		subscribe = "reserve_esb_lv/Q_Set",

		out = {
			signals = (
				{ name = "V", unit = "Volts" }
			)
		},
		in = {
			signals = (
				{ name = "Q", unit = "Var" }
			)
		}
	},
	v2g_bus_78 = {
		type = "mqtt",
		format = "json.reserve",

		builtin = false,

		host = "acs-os-villas",
		publish = "reserve_esb_lv",
		subscribe = "reserve_esb_lv/Q_Set",

		out = {
			signals = (
				{ name = "V", unit = "Volts" }
			)
		},
		in = {
			signals = (
				{ name = "Q", unit = "Var" }
			)
		}
	},
	signal = {
		type = "signal",

		signal = "sine",
		offset = 230,
		amplitude = 0.5,
		frequency = 0.1,
		rate = 20,
		values = 1
	},
	opal = {
		type = "socket",
		layer = "udp",

		format = "villas.binary",

		local = "134.130.169.82:12000",
		remote = "134.130.169.80:12000"
	},
	broker1 = {
		type = "mqtt"
		format = "protobuf",

		username = "guest",
	        password = "guest",
		host = "acs-os-villas",
		port = 1883,

		publish = "opal-villas",
		subscribe = "villas-opal",

		hooks = (
			{ type = "stats" }
		)
	}
}

paths = (
	# Simulation -> VILLASweb
	{
		enabled = true,
		in = "opal",
		out = "broker1"

		hooks = (
			{ type = "limit_rate", rate = 50 }
		)
	},
	# VILLASweb -> Simulation
	{
		in = "broker1.data[0-3]",
		out = "opal",
	        hooks = (
                        { type = "print" }
                )
	},
	# Simulation -> AVM
	{
		enabled = false,

		in = "signal.data[0]",
		out = [ "v2g_bus_68","v2g_bus_81","v2g_bus_27","v2g_bus_35","v2g_bus_85","v2g_bus_19","v2g_bus_63","v2g_bus_76","v2g_bus_78" ],

		hooks = (
			{ type = "print" }
		)
	},

	# AVM -> Simulation
	{
		enabled = false,

		mode = "any",
		in = [ "v2g_bus_68.data[0]","v2g_bus_81.data[0]","v2g_bus_27.data[0]","v2g_bus_35.data[0]","v2g_bus_85.data[0]","v2g_bus_19.data[0]","v2g_bus_63.data[0]","v2g_bus_76.data[0]","v2g_bus_78.data[0]" ],

		hooks = (
			{ type = "print" }
		)
	}
)

